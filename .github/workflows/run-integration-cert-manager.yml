name: Test cert manager
on:
   pull_request:
      branches:
         - main
         - 'releases/*'
   push:
      branches:
         - main
         - 'releases/*'
   workflow_dispatch:

jobs:
   run-integration-test:
      name: Run Namespace Optional Integration Tests
      runs-on: ubuntu-22.04
      env:
         KUBECONFIG: /home/runner/.kube/config
      steps:
         - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

         - name: Install dependencies
           run: |
              rm -rf node_modules/
              npm install
         - name: Install ncc
           run: npm i -g @vercel/ncc
         - name: Install conntrack
           run: sudo apt-get install -y conntrack
         - name: Build
           run: ncc build src/run.ts -o lib

         - uses: Azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4.0.0
           name: Install Kubectl

         - id: setup-minikube
           name: Setup Minikube
           uses: medyagh/setup-minikube@cea33675329b799adccc9526aa5daccc26cd5052 # v0.0.19
           with:
              minikube-version: 1.34.0
              kubernetes-version: 1.31.0
              driver: 'none'
           timeout-minutes: 3
         - name: Deploy cert manager (pre-requisite for actions-runner-controller)
           uses: Azure/k8s-deploy@v5.0.3
           with:
             action: deploy
             strategy: basic
             manifests: |
               test/integration/manifests/cert-manager.yaml
             force: true
          
         - name: Verify cert-manager namespace was created
           run: kubectl get namespace cert-manager
          
         - name: Verify cert-manager deployments are ready
           run: |
             kubectl wait --for=condition=available --timeout=300s deployment/cert-manager -n cert-manager
             kubectl wait --for=condition=available --timeout=300s deployment/cert-manager-cainjector -n cert-manager
             kubectl wait --for=condition=available --timeout=300s deployment/cert-manager-webhook -n cert-manager
          
         - name: Verify cert-manager CRDs are installed
           run: |
             kubectl get crd certificates.cert-manager.io
             kubectl get crd issuers.cert-manager.io
             kubectl get crd clusterissuers.cert-manager.io
          
         - name: Test certificate creation (basic functionality test)
           run: |
             cat <<EOF | kubectl apply -f -
             apiVersion: cert-manager.io/v1
             kind: ClusterIssuer
             metadata:
               name: selfsigned-issuer
             spec:
               selfSigned: {}
             ---
             apiVersion: cert-manager.io/v1
             kind: Certificate
             metadata:
               name: test-certificate
               namespace: cert-manager
             spec:
               secretName: test-certificate-secret
               issuerRef:
                 name: selfsigned-issuer
                 kind: ClusterIssuer
               commonName: test.example.com
             EOF
          
         - name: Verify certificate was issued
           run: |
             kubectl wait --for=condition=ready --timeout=60s certificate/test-certificate -n cert-manager
             kubectl get secret test-certificate-secret -n cert-manager
         - name: Cleanup test resources
           if: always()
           run: |
             kubectl delete certificate test-certificate -n cert-manager --ignore-not-found=true
             kubectl delete clusterissuer selfsigned-issuer --ignore-not-found=true
