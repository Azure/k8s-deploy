name: Minikube Integration Tests - basic
on:
   pull_request:
      branches:
         - main
         - 'releases/*'
   push:
      branches:
         - main
         - 'releases/*'
   workflow_dispatch:

jobs:
   run-integration-test:
      name: Run Minikube Integration Tests
      runs-on: ubuntu-20.04
      env:
         KUBECONFIG: /home/runner/.kube/config
         NAMESPACE: test-${{ github.run_id }}
      steps:
         - uses: actions/checkout@v3

         - name: Install dependencies
           run: |
              rm -rf node_modules/
              npm install
         - name: Install ncc
           run: npm i -g @vercel/ncc
         - name: Build
           run: ncc build src/run.ts -o lib

         - uses: Azure/setup-kubectl@v3
           name: Install Kubectl

         - id: setup-minikube
           name: Setup Minikube
           uses: manusa/actions-setup-minikube@v2.4.2
           with:
              minikube version: 'v1.24.0'
              kubernetes version: 'v1.21.0'
              driver: 'none'
           timeout-minutes: 3

         - name: Create namespace to run tests
           run: kubectl create ns ${{ env.NAMESPACE }}

         - uses: actions/setup-python@v2
           name: Install Python
           with:
              python-version: '3.x'

         - name: Cleaning any previously created items
           run: |
              python test/integration/k8s-deploy-delete.py 'Service' 'all' ${{ env.NAMESPACE }}
              python test/integration/k8s-deploy-delete.py 'Deployment' 'all' ${{ env.NAMESPACE }}
              python test/integration/k8s-deploy-delete.py 'Ingress' 'all' ${{ env.NAMESPACE }}

         - name: Executing deploy action for pod
           uses: ./
           with:
              namespace: ${{ env.NAMESPACE }}
              images: nginx:1.14.2
              manifests: |
                 test/integration/manifests/test.yml
              action: deploy

         - name: Checking if deployments and services were created
           run: |
              python test/integration/k8s-deploy-test.py namespace=${{ env.NAMESPACE }} kind=Deployment name=nginx-deployment containerName=nginx:1.14.2 labels=app:nginx,workflow:actions.github.com-k8s-deploy,workflowFriendlyName:Minikube_Integration_Tests_-_basic selectorLabels=app:nginx
              python test/integration/k8s-deploy-test.py namespace=${{ env.NAMESPACE }} kind=Service name=nginx-service labels=workflow:actions.github.com-k8s-deploy,workflowFriendlyName:Minikube_Integration_Tests_-_basic selectorLabels=app:nginx
