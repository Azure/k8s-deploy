import { WebRequest, WebResponse, sendRequest } from "./httpClient";
import * as core from '@actions/core';

export class GitHubClient {
    constructor(repository: string, token: string) {
        this._repository = repository;
        this._token = token;
    }

    public async getWorkflowRun(runId: string): Promise<any> {
        const requestUri = `${this._baseUri}/repos/${this._repository}/actions/runs/${runId}`;
        core.debug(`Getting workflow run for repo: ${this._repository} and runId: ${runId}`);
        return this._beginRequest(requestUri, "GET");
    }

    public async getWorkflow(workflowId: string): Promise<any> {
        const requestUri = `${this._baseUri}/repos/${this._repository}/actions/workflows/${workflowId}`;
        core.debug(`Getting workflow for repo: ${this._repository} and workflowId: ${workflowId}`);
        return this._beginRequest(requestUri, "GET");
    }

    private async _beginRequest(uri: string, method: string) {
        const webRequest = new WebRequest();
        webRequest.method = method;
        webRequest.uri = uri;
        webRequest.headers = {
            Authorization: `Bearer ${this._token}`
        };

        const response: WebResponse = await sendRequest(webRequest);

        return Promise.resolve(response);
    }

    private _repository: string;
    private _token: string;
    private readonly _baseUri = 'https://api.github.com'
} 